name: Deploy on Content Change

on:
  push:
    branches:
      - master  # or master, depending on your default branch name
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper deployment
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Using a more stable version
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate JSON from Markdown
        run: node scripts/generateJsonFromMarkdown.js
        
      - name: Build site
        run: npm run build
        
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages  # The branch the action should deploy to
          folder: dist      # The folder the action should deploy
          clean: true       # Automatically remove deleted files from the deploy branch
          token: ${{ secrets.GITHUB_TOKEN }}  # GitHub automatically provides this token

      # Notify DingTalk if configured (using curl instead of action)
      - name: Notify DingTalk
        if: success()
        env:
          DINGTALK_WEBHOOK_URL: ${{ secrets.DINGTALK_WEBHOOK_URL }}
        run: |
          if [ -n "$DINGTALK_WEBHOOK_URL" ]; then
            # Prepare markdown message
            MSG="### ðŸŽ‰ haidongchen.com Deployment Successful\n\n**Repository:** ${{ github.repository }}\n**Branch:** ${{ github.ref_name }}\n**Commit:** [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})\n**Triggered By:** ${{ github.actor }}\n\nContent changes have been published to GitHub Pages.\n[View the website](https://haidongchen.com)"
            
            # Send to DingTalk
            curl -X POST "$DINGTALK_WEBHOOK_URL" \
                 -H "Content-Type: application/json" \
                 -d "{\"msgtype\":\"markdown\",\"markdown\":{\"title\":\"Deployment Successful\",\"text\":\"$MSG\"}}"
            
            echo "DingTalk notification sent"
          else
            echo "DINGTALK_WEBHOOK_URL is not set, skipping notification"
          fi
        continue-on-error: true

      # Notify ntfy if configured
      - name: Notify ntfy
        if: success()
        env:
          NTFY_WEBHOOK_URL: ${{ secrets.NTFY_WEBHOOK_URL }}
        run: |
          if [ -n "$NTFY_WEBHOOK_URL" ]; then
            curl -H "Title: Website Deployment Successful" \
                 -H "Priority: default" \
                 -H "Tags: white_check_mark" \
                 -d "Content changes for ${{ github.repository }} have been published to GitHub Pages." \
                 "$NTFY_WEBHOOK_URL"
            
            echo "ntfy notification sent"
          else
            echo "NTFY_WEBHOOK_URL is not set, skipping notification"
          fi
        continue-on-error: true

      - name: Notify on success
        run: |
          echo "ðŸŽ‰ Deployment completed successfully!"
          echo "New content changes have been published."
          echo "Deployed to: https://daviddhc20120601.github.io"
